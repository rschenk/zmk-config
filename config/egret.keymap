#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define NAV     1
#define MDA     2
#define NUM     3
#define SYM     4
#define FUN     5

#define LEFT_KEYS 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24
#define RIGHT_KEYS 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define BOTTOM_KEYS 30 31 32 33 34 35

// #define SEMI_Q P
// #define SEMI_C SEMI
// #define COLN_Q LSFT(KC_P)
// #define COLN_C KC_COLN

/ {
      behaviors {
        // PHT mods currently do not work with multiple modifiers (ie cmd-shift-n) until https://github.com/zmkfirmware/zmk/issues/1363 is solved
        /*
        lh_pht: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <190>;
            quick-tap-ms = <95>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <RIGHT_KEYS BOTTOM_KEYS>;    // <---[[right-hand keys]]
        };
        rh_pht: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <190>;
            quick-tap-ms = <95>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <LEFT_KEYS BOTTOM_KEYS>;    // <---[[left-hand keys]]
        };
        */

        hrm: home_row_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <190>;
            quick-tap-ms = <92>; // the greater the value, the harder it will be to invoke the hold behavior
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        qlt: layer_tap_with_quick_tap {
        	compatible = "zmk,behavior-hold-tap";
			label = "QUICK_LAYER_TAP";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
            quick-tap-ms = <200>;
			bindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    &kp Q           &kp W           &kp E           &kp R           &kp T       &kp Y           &kp U           &kp I           &kp O           &kp SQT
    &hrm LCTRL A    &hrm LALT S     &hrm LCMD D     &hrm LSHIFT F   &kp G       &kp H           &hrm RSHIFT J   &hrm RCMD K     &hrm RALT L     &hrm RCTRL SEMI
    &kp Z           &kp X           &kp C           &kp V           &kp B       &kp N           &kp M           &kp COMMA       &kp DOT         &kp FSLH
                                    &qlt MDA ESC    &qlt NAV SPACE  &kp TAB     &qlt SYM RET    &qlt NUM BSPC   &qlt FUN DEL
            >;
        };

        nav_layer {
            bindings = <
    &trans    &trans    &trans    &trans      &trans   &trans   &trans    &trans  &trans    &trans
    &kp LCTRL &kp LALT  &kp LCMD  &kp LSHIFT  &trans   &kp LEFT &kp DOWN  &kp UP  &kp RIGHT &caps_word
    &trans    &trans    &trans    &trans      &trans   &trans   &trans    &trans  &trans    &trans
                        &trans    &trans      &trans   &kp RET  &kp BSPC  &kp DEL
            >;
        };

        media_layer {
            bindings = <
    &trans    &trans    &trans    &trans      &trans   &trans     &trans        &trans        &trans     &trans
    &kp LCTRL &kp LALT  &kp LCMD  &kp LSHIFT  &trans   &kp C_PREV &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT &trans
    &trans    &trans    &trans    &trans      &trans   &trans     &trans        &trans        &trans      &trans
                        &trans    &trans      &trans   &kp C_STOP &kp C_PP      &kp C_MUTE
            >;
        };

        num_layer {
            bindings = <
    &kp LBKT  &kp N7  &kp N8  &kp N9  &kp RBKT    &trans  &trans    &trans    &trans    &trans
    &kp P     &kp N4  &kp N5  &kp N6  &kp EQUAL   &trans  &kp RSHFT &kp RCMD  &kp RALT  &kp RCTRL
    &kp GRAVE &kp N1  &kp N2  &kp N3  &kp BSLH    &trans  &trans    &trans    &trans    &trans
                      &kp DOT &kp N0  &kp MINUS   &trans  &trans    &trans
            >;
        };

        sym_layer {
            bindings = <
    &kp LBRC  &kp AMPS  &kp STAR  &kp LPAR  &kp RBRC    &trans  &trans    &trans    &trans    &trans
    &kp LS(P) &kp DLLR  &kp PRCNT &kp CARET &kp PLUS    &trans  &kp RSHFT &kp RCMD  &kp RALT  &kp RCTRL
    &kp TILDE &kp EXCL  &kp AT    &kp HASH  &kp PIPE    &trans  &trans    &trans    &trans    &trans
                        &kp LPAR  &kp RPAR  &kp UNDER   &trans  &trans    &trans
            >;
        };

        fun_layer {
            bindings = <
    &kp F12   &kp F7    &kp F8    &kp F9    &kp PSCRN   &trans  &trans    &trans    &trans    &trans
    &kp F11   &kp F4    &kp F5    &kp F6    &kp SLCK    &trans  &kp RSHFT &kp RCMD  &kp RALT  &kp RCTRL
    &kp F10   &kp F1    &kp F2    &kp F3    &trans      &trans  &trans    &trans    &trans    &trans
                        &kp K_APP &kp SPACE &kp TAB     &trans  &trans    &trans
            >;
        };
    };
};
